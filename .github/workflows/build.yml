name: Build Project

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_ubuntu_x11:
    name: Build Ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Vulkan SDK
        id  : cache-vulkan-sdk
        uses: actions/cache@v1
        with:
          path: "1.2.162.0"
          key: vulkan-sdk-1.2.162.0

      - name: Setup Vulkan
        if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
        run: |
          wget https://sdk.lunarg.com/sdk/download/1.2.162.0/linux/vulkansdk-linux-x86_64-1.2.162.0.tar.gz?Human=true -O vulkansdk-linux-x86_64-1.2.162.0.tar.gz
          tar -xf vulkansdk-linux-x86_64-1.2.162.0.tar.gz

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev mesa-common-dev

      - name: Build
        run: |
          export VULKAN_SDK=`pwd`/1.2.162.0/x86_64
          cmake . -DVORTEX2D_ENABLE_TESTS=On -DVORTEX2D_ENABLE_EXAMPLES=On
          make -j 2
  build_windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Vulkan SDK
        id: cache-vulkan-sdk
        uses: actions/cache@v1
        with:
          path: "VulkanSDK"
          key: vulkan-sdk-1.2.162.0

      - name: Setup Vulkan
        if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.2.162.0/windows/VulkanSDK-1.2.162.0-Installer.exe" -OutFile VulkanSDK.exe
          7z x -aoa ./VulkanSDK.exe -oVulkanSDK

      - name: Build
        run: |
          $env:VULKAN_SDK="$(pwd)/VulkanSDK"
          mkdir build && cd build
          cmake .. -DVORTEX2D_ENABLE_TESTS=On -DVORTEX2D_ENABLE_EXAMPLES=On
          cmake --build . -j 2

  build_macos:
    name: Build macOS
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache Vulkan SDK
      id: cache-vulkan-sdk
      uses: actions/cache@v1
      with:
        path: "vulkansdk-macos-1.2.162.0"
        key: vulkansdk-macos-1.2.162.0

    - name: Setup Vulkan
      if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.2.162.0/mac/vulkansdk-macos-1.2.162.0.dmg?Human=true -O vulkansdk-macos-1.2.162.0.dmg
        hdiutil attach vulkansdk-macos-1.2.162.0.dmg
        cp -r /Volumes/vulkansdk-macos-1.2.162.0 .
        hdiutil detach /Volumes/vulkansdk-macos-1.2.162.0

    - name: Build x86_64
      run: |
        export VULKAN_SDK=`pwd`/vulkansdk-macos-1.2.162.0/macOS
        mkdir build && cd build
        cmake .. -DMOLTENVK_DIR=`pwd`/../vulkansdk-macos-1.2.162.0/MoltenVK -DGLSL_VALIDATOR=`pwd`/../vulkansdk-macos-1.2.162.0/macOS/bin/glslangValidator -DVORTEX2D_ENABLE_TESTS=On -DVORTEX2D_ENABLE_EXAMPLES=On -DCMAKE_CXX_FLAGS="-Wno-documentation-unknown-command"
        cmake --build . -j 2