#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
  float w;
  int red;
}
consts;

layout(std430, binding = 0) buffer Pressure
{
  float value[];
}
pressure;

layout(std430, binding = 1) buffer Diagonal
{
  float value[];
}
diagonal;

layout(std430, binding = 2) buffer Lower
{
  vec2 value[];
}
lower;

layout(std430, binding = 3) buffer B
{
  float value[];
}
b;

void main()
{
  uvec2 localSize = gl_WorkGroupSize.xy;  // Hack for Mali-GPU

  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x > 0 && pos.y > 0 && 2 * pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    int offset = (pos.y & 1) ^ consts.red;
    int index = pos.y * consts.width + 2 * pos.x + offset;

    float d = diagonal.value[index];
    if (d != 0.0)
    {
      float x = pressure.value[index];

      float newx = (b.value[index] - pressure.value[index + 1] * lower.value[index + 1].x -
                    pressure.value[index - 1] * lower.value[index].x -
                    pressure.value[index + consts.width] * lower.value[index + consts.width].y -
                    pressure.value[index - consts.width] * lower.value[index].y) /
                   d;

      pressure.value[index] = mix(x, newx, consts.w);
    }
  }
}
