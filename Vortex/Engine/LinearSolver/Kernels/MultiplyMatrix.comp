#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
}
consts;

layout(std430, binding = 0) buffer Diagonal
{
  float value[];
}
diagonal;

layout(std430, binding = 1) buffer Lower
{
  vec2 value[];
}
lower;

layout(std430, binding = 2) buffer Input
{
  float value[];
}
pressure;

layout(std430, binding = 3) buffer Output
{
  float value[];
}
z;

void main()
{
  uvec2 localSize = gl_WorkGroupSize.xy;  // Hack for Mali-GPU

  ivec2 pos = ivec2(gl_GlobalInvocationID);

  if (pos.x > 0 && pos.y > 0 && pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    int index = pos.x + pos.y * consts.width;

    float x = pressure.value[index];

    vec4 weights;
    weights.yw = lower.value[index];
    weights.x = lower.value[index + 1].x;
    weights.z = lower.value[index + consts.width].y;

    vec4 p;
    p.x = pressure.value[index + 1];
    p.y = pressure.value[index - 1];
    p.z = pressure.value[index + consts.width];
    p.w = pressure.value[index - consts.width];

    float d = diagonal.value[index];

    z.value[index] = d * x + dot(p, weights);
  }
}
