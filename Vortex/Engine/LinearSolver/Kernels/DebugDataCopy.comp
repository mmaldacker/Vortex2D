#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
  float delta;
}
consts;

layout(std430, binding = 0) buffer Diagonal
{
  float value[];
}
diagonal;

layout(std430, binding = 1) buffer Lower
{
  vec2 value[];
}
lower;

layout(std430, binding = 2) buffer X
{
  float value[];
}
x;

layout(std430, binding = 3) buffer Div
{
  float value[];
}
div;

layout(binding = 4, r32f) uniform image2D DebugDiagonal;
layout(binding = 5, rg32f) uniform image2D DebugLower;
layout(binding = 6, r32f) uniform image2D DebugX;
layout(binding = 7, r32f) uniform image2D DebugDiv;

void main()
{
  uvec2 localSize = gl_WorkGroupSize.xy;  // Hack for Mali-GPU

  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x > 0 && pos.y > 0 && pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    int index = pos.x + pos.y * consts.width;

    imageStore(DebugDiagonal, pos, vec4(diagonal.value[index], 0.0, 0.0, 0.0));
    imageStore(DebugLower, pos, vec4(lower.value[index], 0.0, 0.0));
    imageStore(DebugX, pos, vec4(x.value[index], 0.0, 0.0, 0.0));
    imageStore(DebugDiv, pos, vec4(div.value[index], 0.0, 0.0, 0.0));
  }
}
