#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable

layout(local_size_x_id = 1, local_size_y_id = 2) in;
layout(constant_id = 3) const int interpolationMode = 0;

layout(push_constant) uniform Consts
{
  int width;
  int height;
  float delta;
}
consts;

layout(binding = 0, rgba32f) uniform image2D Velocity;
layout(binding = 1, rgba8) uniform image2D Field;
layout(binding = 2, rgba8) uniform image2D OutField;

#include "CommonAdvect.comp"

vec4[16] get_field_samples(ivec2 ij)
{
  vec4 t[16];
  for (int j = 0; j < 4; ++j)
  {
    for (int i = 0; i < 4; ++i)
    {
      t[i + 4 * j] = imageLoad(Field, ij + ivec2(i, j) - ivec2(1));
    }
  }
  return t;
}

vec4 interpolate(vec2 xy)
{
  ivec2 ij = ivec2(floor(xy));
  vec2 f = xy - ij;

  vec4 t[16] = get_field_samples(ij);
  return bicubic(t, f);
}

void main(void)
{
  uvec2 localSize = gl_WorkGroupSize.xy;  // Hack for Mali-GPU

  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x < consts.width && pos.y < consts.height)
  {
    vec4 value = interpolate(trace_rk3(pos, consts.delta));
    imageStore(OutField, pos, value);
  }
}
