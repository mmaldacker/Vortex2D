#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable

layout(local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
}
consts;

layout(std430, binding = 0) buffer Div
{
  float value[];
}
div;

layout(std430, binding = 1) buffer Diagonal
{
  float value[];
}
diagonal;

layout(binding = 2, r32f) uniform image2D SolidLevelSet;

struct Velocity
{
  vec2 velocity;
  float angular_velocity;
};

layout(binding = 3) uniform RigidbodyVelocity
{
  Velocity value;
}
velocity;

layout(binding = 4) uniform Centre
{
  vec2 centre;
};

#include "CommonRigidbody.comp"

void main()
{
  uvec2 localSize = gl_WorkGroupSize.xy;  // Hack for Mali-GPU

  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x > 0 && pos.y > 0 && pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    int index = pos.x + pos.y * consts.width;
    if (diagonal.value[index] != 0.0)  // ensure linear system is well formed
    {
      vec3 base = get_base(pos);
      div.value[index] -= base.x * velocity.value.velocity.x + base.y * velocity.value.velocity.y +
                          base.z * velocity.value.angular_velocity;
    }
  }
}
