#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable

layout(local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
}
consts;

layout(std430, binding = 0) buffer Diagonal
{
  float value[];
}
diagonal;

layout(binding = 1, r32f) uniform image2D SolidLevelSet;

layout(std430, binding = 2) buffer Pressure
{
  float value[];
}
pressure;

struct J
{
  vec2 force;
  float torque;
};

layout(std430, binding = 3) buffer Force
{
  J value[];
}
force;

layout(binding = 4) uniform Centre
{
  vec2 centre;
};

#include "CommonRigidbody.comp"

void main()
{
  uvec2 localSize = gl_WorkGroupSize.xy;  // Hack for Mali-GPU

  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x > 0 && pos.y > 0 && pos.x < consts.width - 1 && pos.y < consts.height - 1)
  {
    int index = pos.x + pos.y * consts.width;
    if (diagonal.value[index] != 0.0)
    {
      vec3 base = get_base(pos);

      int index = pos.x + pos.y * consts.width;
      force.value[index].force.x = base.x * pressure.value[index];
      force.value[index].force.y = base.y * pressure.value[index];
      force.value[index].torque = base.z * pressure.value[index];
    }
  }
}
