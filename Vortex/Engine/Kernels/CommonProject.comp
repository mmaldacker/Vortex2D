float fraction_inside(float a, float b)
{
  if (a < 0.0 && b < 0.0)
    return 1.0;
  if (a < 0.0 && b >= 0.0)
    return a / (a - b);
  if (a >= 0.0 && b < 0.0)
    return b / (b - a);
  return 0.0;
}

vec2 get_weight(ivec2 pos)
{
  vec2 weight;
  weight.x = 1.0 - fraction_inside(imageLoad(SolidLevelSet, pos + ivec2(0, 1)).x,
                                   imageLoad(SolidLevelSet, pos + ivec2(0, 0)).x);
  weight.y = 1.0 - fraction_inside(imageLoad(SolidLevelSet, pos + ivec2(1, 0)).x,
                                   imageLoad(SolidLevelSet, pos + ivec2(0, 0)).x);

  return clamp(weight, vec2(0.0), vec2(1.0));
}

float get_weightxp(ivec2 pos)
{
  float weight;
  weight = 1.0 - fraction_inside(imageLoad(SolidLevelSet, pos + ivec2(1, 1)).x,
                                 imageLoad(SolidLevelSet, pos + ivec2(1, 0)).x);

  return clamp(weight, 0.0, 1.0);
}

float get_weightyp(ivec2 pos)
{
  float weight;
  weight = 1.0 - fraction_inside(imageLoad(SolidLevelSet, pos + ivec2(1, 1)).x,
                                 imageLoad(SolidLevelSet, pos + ivec2(0, 1)).x);

  return clamp(weight, 0.0, 1.0);
}
