#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable

layout(local_size_x_id = 1, local_size_y_id = 2) in;

layout(push_constant) uniform Consts
{
  int width;
  int height;
  float delta;
  float mass;
  float inertia;
}
consts;

layout(std430, binding = 0) buffer Diagonal
{
  float value[];
}
diagonal;

layout(binding = 1, r32f) uniform image2D SolidLevelSet;

struct J
{
  vec2 force;
  float torque;
};

layout(std430, binding = 2) buffer ReducedForce
{
  J value;
}
reducedForce;

layout(std430, binding = 3) buffer Output
{
  float value[];
}
z;

layout(binding = 4) uniform Centre
{
  vec2 centre;
};

#include "CommonRigidbody.comp"

void main()
{
  uvec2 localSize = gl_WorkGroupSize.xy;  // Hack for Mali-GPU

  ivec2 pos = ivec2(gl_GlobalInvocationID);
  if (pos.x < consts.width && pos.y < consts.height)
  {
    int index = pos.x + pos.y * consts.width;
    if (diagonal.value[index] != 0.0)
    {
      vec3 base = get_base(pos);
      z.value[index] += consts.delta * (base.x * reducedForce.value.force.x / consts.mass +
                                        base.y * reducedForce.value.force.y / consts.mass +
                                        base.z * reducedForce.value.torque / consts.inertia);
    }
  }
}
